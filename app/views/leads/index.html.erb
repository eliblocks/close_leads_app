<h1>Smartview Leads</h1>

<table id="leadsTable">
  <thead>
    <tr>
      <th>
        Name<br>
        <span class="sort-indicator" onclick="sortTable(0, 'asc')">▲</span>
        <span class="sort-indicator" onclick="sortTable(0, 'desc')">▼</span><br>
        <input type="text" id="filterName" onkeyup="filterTable()" placeholder="Filter by name">
      </th>
      <th>
        Status<br>
        <span class="sort-indicator" onclick="sortTable(1, 'asc')">▲</span>
        <span class="sort-indicator" onclick="sortTable(1, 'desc')">▼</span><br>
        <input type="text" id="filterStatus" onkeyup="filterTable()" placeholder="Filter by status">
      </th>
      <th>
        Contacts<br>
        <span class="sort-indicator" onclick="sortTable(2, 'asc')">▲</span>
        <span class="sort-indicator" onclick="sortTable(2, 'desc')">▼</span><br>
        <input type="text" id="filterContacts" onkeyup="filterTable()" placeholder="Filter by contacts">
      </th>
      <th>
        Created<br>
        <span class="sort-indicator" onclick="sortTable(3, 'asc')">▲</span>
        <span class="sort-indicator" onclick="sortTable(3, 'desc')">▼</span>
      </th>
      <th>View in Close</th>
    </tr>
  </thead>
  <tbody>
    <% @leads.each do |lead| %>
    <tr>
      <td><%= lead['name'] %></td>
      <td><%= lead['status_label'] %></td>
      <td>
        <% if lead['contacts'] %>
          <% lead['contacts'].each do |contact| %>
            <% if contact['urls'] && !contact['urls'].empty? %>
              <% contact['urls'].each do |link| %>
                <a href="<%= link['url'] %>" target="_blank"><%= contact['name'] %></a><br>
              <% end %>
            <% else %>
              <%= contact['name'] %><br>
            <% end %>
          <% end %>
        <% end %>
      </td>
      <td><%= DateTime.parse(lead['date_created']).strftime('%Y-%m-%d') %></td>
      <td><a href="https://app.close.com/lead/<%= lead['id'] %>" target="_blank">View in Close</a></td>
    </tr>
    <% end %>
  </tbody>
</table>

<script>
  function filterTable() {
    const nameFilter = document.getElementById('filterName').value.toLowerCase();
    const statusFilter = document.getElementById('filterStatus').value.toLowerCase();
    const contactsFilter = document.getElementById('filterContacts').value.toLowerCase();
    const table = document.getElementById('leadsTable');
    const rows = table.querySelectorAll('tbody tr');

    rows.forEach(row => {
      const nameCell = row.cells[0].textContent.toLowerCase();
      const statusCell = row.cells[1].textContent.toLowerCase();
      const contactsCell = row.cells[2].textContent.toLowerCase();
      const nameMatches = nameCell.includes(nameFilter);
      const statusMatches = statusCell.includes(statusFilter);
      const contactsMatches = contactsCell.includes(contactsFilter);

      if (nameMatches && statusMatches && contactsMatches) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  }

  function sortTable(columnIndex, direction) {
    const table = document.getElementById('leadsTable');
    const tbody = table.querySelector('tbody');
    const rows = Array.from(tbody.rows);
    const isAscending = direction === 'asc';

    rows.sort((a, b) => {
      const aText = a.cells[columnIndex].textContent;
      const bText = b.cells[columnIndex].textContent;

      if (columnIndex === 3) { // Assume 'Created' column has dates
        const aDate = new Date(aText);
        const bDate = new Date(bText);
        return isAscending ? aDate - bDate : bDate - aDate;
      } else {
        return isAscending
          ? aText.localeCompare(bText)
          : bText.localeCompare(aText);
      }
    });

    rows.forEach(row => tbody.appendChild(row));
  }
</script>
